Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: main(int, char **)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (main(int, char **)) [1] util.cpp(84,1)
  -> INLINE: (85,12) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::basic_string(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (95,13) help()
  -> INLINE: (102,34) std::type_info::operator==(const std::type_info *, const std::type_info &) const
  -> INLINE: (103,34) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::basic_string(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *, const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::value_type *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (108,13) help()
  -> INLINE: (114,28) std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::~vector(std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (114,28) std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::vector(std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *, std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (115,20) std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::vector(std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (115,20) std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::~vector(std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (118,13) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *, const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::value_type *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (119,53) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::c_str(const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (121,13) std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::~vector(std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (121,13) std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::operator=(std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *, const std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (121,13) std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::~vector(std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (121,15) openFix(std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *, std::__1::string *, std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *, int)
  -> INLINE: (121,15) std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::~vector(std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (121,31) std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::~vector(std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (121,31) std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::vector(std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *, const std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (122,21) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::basic_string(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *, const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::value_type *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (123,11) std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::~vector(std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (123,11) std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::~vector(std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (123,11) std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::operator=(std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *, const std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (123,11) std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::~vector(std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (123,13) tagSearch(std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *, std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *, std::__1::string *, int, std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *)
  -> INLINE: (123,13) std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::~vector(std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (123,23) std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::~vector(std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (123,23) std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::vector(std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *, const std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (123,47) std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::~vector(std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (123,47) std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::vector(std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *, const std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (127,5) Counter(std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *, int *)
    -> INLINE: (71,28) std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::size(const std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *) const
    -> INLINE: (78,21) std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::operator[](std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *, std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::size_type)
  -> INLINE: (127,5) std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::~vector(std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (127,13) std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::~vector(std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (127,13) std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::vector(std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *, const std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (136,5) std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::~vector(std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (136,5) std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::~vector(std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: OpenMP optimizations [openmp]

OpenMP Construct at util.cpp(78,5) inlined into util.cpp(127,5)
remark #16208: OpenMP multithreaded code generation for ATOMIC was successful
OpenMP Construct at util.cpp(74,1) inlined into util.cpp(127,5)
remark #16200: OpenMP DEFINED LOOP WAS PARALLELIZED

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/string(1313,13) inlined into util.cpp(85,12)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/string(1313,13) inlined into util.cpp(85,12)
<Remainder loop for vectorization>
   remark #25436: completely unrolled by 1  
LOOP END

LOOP BEGIN at util.cpp(87,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/string(1547,5) ]
LOOP END

LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(1069,9) inlined into util.cpp(114,28)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between _fixdata._fixdata._fixdata->__r_->__first_ (2208:31) and ___a[___i] (1314:17)

   LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/string(1313,13) inlined into util.cpp(114,28)
      remark #25436: completely unrolled by 3   (pre-vector) 
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1623,13) inlined into util.cpp(121,31)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1553,40) ]
LOOP END

LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(1705,5) inlined into util.cpp(121,13)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(1706,19) ]
LOOP END

LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1623,13) inlined into util.cpp(121,13)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1553,40) ]
LOOP END

LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(416,5) inlined into util.cpp(121,13)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1711,22) ]
LOOP END

LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(416,5) inlined into util.cpp(121,13)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1711,22) ]
LOOP END

LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1623,13) inlined into util.cpp(121,13)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1553,40) ]
LOOP END

LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(416,5) inlined into util.cpp(121,13)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1711,22) ]
LOOP END

LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(416,5) inlined into util.cpp(121,13)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1711,22) ]
LOOP END

LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1623,13) inlined into util.cpp(123,23)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1553,40) ]
LOOP END

LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1623,13) inlined into util.cpp(123,47)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1553,40) ]
LOOP END

LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(1705,5) inlined into util.cpp(123,11)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(1706,19) ]
LOOP END

LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1623,13) inlined into util.cpp(123,11)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1553,40) ]
LOOP END

LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(416,5) inlined into util.cpp(123,11)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1711,22) ]
LOOP END

LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(416,5) inlined into util.cpp(123,11)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1711,22) ]
LOOP END

LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1623,13) inlined into util.cpp(123,11)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1553,40) ]
LOOP END

LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(416,5) inlined into util.cpp(123,11)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1711,22) ]
LOOP END

LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(416,5) inlined into util.cpp(123,11)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1711,22) ]
LOOP END

LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(416,5) inlined into util.cpp(123,11)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1711,22) ]
LOOP END

LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1623,13) inlined into util.cpp(127,13)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1553,40) ]
LOOP END

LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(416,5) inlined into util.cpp(127,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1711,22) ]
LOOP END

LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(416,5) inlined into util.cpp(136,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1711,22) ]
LOOP END

LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(416,5) inlined into util.cpp(136,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1711,22) ]
LOOP END

LOOP BEGIN at util.cpp(75,5) inlined into util.cpp(127,5)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

    Report from: Code generation optimizations [cg]

/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(2208,31):remark #34000: call to _memset implemented inline with stores with proven (alignment, offset): (16, 0)
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(2208,31):remark #34000: call to _memset implemented inline with stores with proven (alignment, offset): (1, 0)
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(2208,31):remark #34000: call to _memset implemented inline with stores with proven (alignment, offset): (16, 0)
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(2208,31):remark #34000: call to _memset implemented inline with stores with proven (alignment, offset): (16, 0)
util.cpp(84,1):remark #34051: REGISTER ALLOCATION : [_main] util.cpp:84

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rsi rdi r8-r10 r12-r15 zmm0]
        
    Routine temporaries
        Total         :     998
            Global    :     170
            Local     :     828
        Regenerable   :     333
        Spilled       :       5
        
    Routine stack
        Variables     :     304 bytes*
            Reads     :     106 [6.51e+00 ~ 4.8%]
            Writes    :     179 [1.23e+01 ~ 9.1%]
        Spills        :      80 bytes*
            Reads     :      30 [5.34e+00 ~ 3.9%]
            Writes    :      17 [9.18e-01 ~ 0.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: tagSearch(std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *, std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *, std::__1::string *, int, std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (tagSearch(std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *, std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *, std::__1::string *, int, std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *)) [4] util.cpp(45,49)
  -> INLINE: (47,30) std::__1::operator+<char, std::__1::char_traits<char>, std::__1::allocator<char>>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *, const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (48,33) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::length(const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (49,24) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::c_str(const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (53,24) std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::~vector(std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (53,24) std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::vector(std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (57,25) std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::push_back(std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *, std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::const_reference)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (57,42) std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::operator[](std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *, std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::size_type)
  -> INLINE: (57,46) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::substr(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *, const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::size_type, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::size_type) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (57,60) std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::operator[](std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *, std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::size_type)
  -> INLINE: (57,64) std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::find(const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *, const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::value_type *, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::size_type) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (61,23) std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::end(std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (61,23) std::__1::__wrap_iter<std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::const_pointer>::__wrap_iter<std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::pointer>(std::__1::__wrap_iter<std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::const_pointer> *, const std::__1::__wrap_iter<std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::pointer> &, std::__1::enable_if<true, void>::type *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (61,37) std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::begin(std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (61,58) std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::insert<std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::iterator>(std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *, std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::const_iterator, std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::iterator, std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::iterator)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (61,58) std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::end(std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (63,5) std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::~vector(std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (65,12) std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::vector(std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *, const std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: OpenMP optimizations [openmp]

OpenMP Construct at util.cpp(60,1)
remark #16206: OpenMP multithreaded code generation for CRITICAL was successful
OpenMP Construct at util.cpp(51,1)
remark #16201: OpenMP DEFINED REGION WAS PARALLELIZED

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/string(1313,13) inlined into util.cpp(47,30)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/string(1313,13) inlined into util.cpp(47,30)
<Remainder loop for vectorization>
   remark #25436: completely unrolled by 1  
LOOP END

LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(1715,5) inlined into util.cpp(61,58)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1553,40) ]
LOOP END


Non-optimizable loops:


LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1623,13) inlined into util.cpp(65,12)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1553,40) ]
LOOP END

LOOP BEGIN at util.cpp(55,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/string(2999,44) ]

   LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__string(683,7) inlined into util.cpp(57,64)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1654,13) inlined into util.cpp(57,25)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1553,40) ]
   LOOP END

   LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__split_buffer(295,5) inlined into util.cpp(57,25)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1711,22) ]
   LOOP END
LOOP END

LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1623,29) inlined into util.cpp(61,58)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1553,40) ]
LOOP END

LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(1880,5) inlined into util.cpp(61,58)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(1881,21) ]
LOOP END

LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(1705,20) inlined into util.cpp(61,58)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(1706,19) ]
LOOP END

LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__split_buffer(266,20) inlined into util.cpp(61,58)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1553,40) ]
LOOP END

LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1654,13) inlined into util.cpp(61,58)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1553,40) ]
LOOP END

LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1593,13) inlined into util.cpp(61,58)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1553,40) ]
LOOP END

LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__split_buffer(295,5) inlined into util.cpp(61,58)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1711,22) ]
LOOP END

LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(416,5) inlined into util.cpp(63,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1711,22) ]
LOOP END

    Report from: Code generation optimizations [cg]

/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(2212,60):remark #34000: call to _memset implemented inline with stores with proven (alignment, offset): (16, 0)
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__string(249,12):remark #34026: call to _memcmp implemented as a call to optimized library version
util.cpp(45,49):remark #34051: REGISTER ALLOCATION : [__Z9tagSearchNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEEES6_iS8_] util.cpp:45

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :     613
            Global    :     134
            Local     :     479
        Regenerable   :     171
        Spilled       :      15
        
    Routine stack
        Variables     :     276 bytes*
            Reads     :      46 [3.06e+01 ~ 4.6%]
            Writes    :      89 [5.19e+01 ~ 7.8%]
        Spills        :     168 bytes*
            Reads     :      50 [2.49e+01 ~ 3.7%]
            Writes    :      33 [2.24e+01 ~ 3.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__1::__split_buffer<std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::value_type, std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::allocator_type &>::~__split_buffer(std::__1::__split_buffer<std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::value_type, std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::allocator_type &> *)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]



Non-optimizable loops:


LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__split_buffer(295,5) inlined into /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__split_buffer(342,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1711,22) ]
LOOP END

    Report from: Code generation optimizations [cg]

/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__split_buffer(340,1):remark #34051: REGISTER ALLOCATION : [__ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEED1Ev] /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__split_buffer:340

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    5[ rax rdx rdi r12-r13]
        
    Routine temporaries
        Total         :      23
            Global    :      10
            Local     :      13
        Regenerable   :       1
        Spilled       :       2
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :      16 bytes*
            Reads     :       4 [1.80e+00 ~ 2.6%]
            Writes    :       2 [1.80e+00 ~ 2.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: openFix(std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *, std::__1::string *, std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (openFix(std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *, std::__1::string *, std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *, int)) [16] util.cpp(24,78)
  -> INLINE: (25,14) std::__1::basic_ifstream<char, std::__1::char_traits<char>>::basic_ifstream(std::__1::basic_ifstream<char, std::__1::char_traits<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (25,14) std::__1::basic_ifstream<char, std::__1::char_traits<char>>::~basic_ifstream(std::__1::basic_ifstream<char, std::__1::char_traits<char>> *const)
  -> INLINE: (26,13) std::__1::basic_ifstream<char, std::__1::char_traits<char>>::open(std::__1::basic_ifstream<char, std::__1::char_traits<char>> *, const std::__1::string &, std::__1::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (28,17) std::__1::basic_ifstream<char, std::__1::char_traits<char>>::is_open(const std::__1::basic_ifstream<char, std::__1::char_traits<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (29,14) std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (30,9) std::__1::basic_ifstream<char, std::__1::char_traits<char>>::~basic_ifstream(std::__1::basic_ifstream<char, std::__1::char_traits<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (30,16) std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::vector(std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *, const std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (35,9) std::__1::getline<char, std::__1::char_traits<char>, std::__1::allocator<char>>(std::__1::basic_istream<char, std::__1::char_traits<char>> &, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (35,33) std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::operator[](std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *, std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::size_type)
  -> INLINE: (36,13) std::__1::basic_ifstream<char, std::__1::char_traits<char>>::close(std::__1::basic_ifstream<char, std::__1::char_traits<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (38,5) std::__1::basic_ifstream<char, std::__1::char_traits<char>>::~basic_ifstream(std::__1::basic_ifstream<char, std::__1::char_traits<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (38,12) std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::vector(std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *, const std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]



Non-optimizable loops:


LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1623,13) inlined into util.cpp(30,16)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1553,40) ]
LOOP END

LOOP BEGIN at <compiler generated>
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization

   LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/istream(1581,17) inlined into util.cpp(35,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/streambuf(183,20) ]
   LOOP END
LOOP END

LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1623,13) inlined into util.cpp(38,12)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1553,40) ]
LOOP END

    Report from: Code generation optimizations [cg]

/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/fstream(492:13)::__Z7openFixNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorIS5_NS3_IS5_EEEEi:  Assume directive not useful: removing

/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/fstream(262,13):remark #34000: call to _memset implemented inline with stores with proven (alignment, offset): (16, 8)
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/fstream(262,13):remark #34000: call to _memset implemented inline with stores with proven (alignment, offset): (16, 8)
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(2208,31):remark #34000: call to _memset implemented inline with stores with proven (alignment, offset): (16, 0)
util.cpp(24,78):remark #34051: REGISTER ALLOCATION : [__Z7openFixNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_6vectorIS5_NS3_IS5_EEEEi] util.cpp:24

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r15 zmm0]
        
    Routine temporaries
        Total         :     486
            Global    :     116
            Local     :     370
        Regenerable   :     107
        Spilled       :      16
        
    Routine stack
        Variables     :     673 bytes*
            Reads     :      44 [1.77e+01 ~ 6.7%]
            Writes    :      95 [5.32e+01 ~ 20.1%]
        Spills        :      80 bytes*
            Reads     :      23 [4.14e+00 ~ 1.6%]
            Writes    :      14 [3.02e+00 ~ 1.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__1::basic_ifstream<char, std::__1::char_traits<char>>::~basic_ifstream(std::__1::basic_ifstream<char, std::__1::char_traits<char>> *const)

    Report from: Code generation optimizations [cg]

/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/iosfwd(131,32):remark #34051: REGISTER ALLOCATION : [__ZNSt3__114basic_ifstreamIcNS_11char_traitsIcEEED1Ev] /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/iosfwd:131

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rax rdx rbx rbp rsi rdi r15]
        
    Routine temporaries
        Total         :      50
            Global    :      14
            Local     :      36
        Regenerable   :       3
        Spilled       :       3
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       3 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__1::__vector_base<std::__1::string, std::__1::allocator<std::__1::string>>::~__vector_base(std::__1::__vector_base<std::__1::string, std::__1::allocator<std::__1::string>> *)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]



Non-optimizable loops:


LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(416,5) inlined into /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(445,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/memory(1711,22) ]
LOOP END

    Report from: Code generation optimizations [cg]

/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector(441,1):remark #34051: REGISTER ALLOCATION : [__ZNSt3__113__vector_baseINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEED1Ev] /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/vector:441

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    5[ rax rdx rdi r12-r13]
        
    Routine temporaries
        Total         :      22
            Global    :       9
            Local     :      13
        Regenerable   :       1
        Spilled       :       2
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :      16 bytes*
            Reads     :       4 [5.01e-01 ~ 1.4%]
            Writes    :       2 [5.01e-01 ~ 1.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: help()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (help()) [28] util.cpp(20,1)


    Report from: Code generation optimizations [cg]

util.cpp(20,1):remark #34051: REGISTER ALLOCATION : [__Z4helpv] util.cpp:20

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       0
            Local     :      11
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: Counter(std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *, int *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Counter(std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *, int *)) [29] util.cpp(69,46)
  -> INLINE: (71,28) std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::size(const std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *) const
  -> INLINE: (78,21) std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::operator[](std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>> *, std::__1::vector<std::__1::string, std::__1::allocator<std::__1::string>>::size_type)


    Report from: OpenMP optimizations [openmp]

OpenMP Construct at util.cpp(78,5)
remark #16208: OpenMP multithreaded code generation for ATOMIC was successful
OpenMP Construct at util.cpp(74,1)
remark #16200: OpenMP DEFINED LOOP WAS PARALLELIZED

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]



Non-optimizable loops:


LOOP BEGIN at util.cpp(75,5)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

    Report from: Code generation optimizations [cg]

util.cpp(69,46):remark #34051: REGISTER ALLOCATION : [__Z7CounterNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEEEPi] util.cpp:69

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rbp rsi rdi r8-r10 r12-r15]
        
    Routine temporaries
        Total         :     127
            Global    :      21
            Local     :     106
        Regenerable   :      51
        Spilled       :       0
        
    Routine stack
        Variables     :      40 bytes*
            Reads     :       4 [0.00e+00 ~ 0.0%]
            Writes    :       9 [1.21e+01 ~ 8.4%]
        Spills        :      48 bytes*
            Reads     :      12 [6.00e+00 ~ 4.2%]
            Writes    :      12 [1.20e+01 ~ 8.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__1::basic_filebuf<char, std::__1::char_traits<char>>::~basic_filebuf(std::__1::basic_filebuf<char, std::__1::char_traits<char>> *)

    Report from: Code generation optimizations [cg]

/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/fstream(359,1):remark #34051: REGISTER ALLOCATION : [__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED1Ev] /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/fstream:359

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    5[ rax rdx rbx rdi r15]
        
    Routine temporaries
        Total         :      27
            Global    :      13
            Local     :      14
        Regenerable   :       1
        Spilled       :       2
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       1 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__1::basic_filebuf<char, std::__1::char_traits<char>>::~basic_filebuf(std::__1::basic_filebuf<char, std::__1::char_traits<char>> *const)

    Report from: Code generation optimizations [cg]

/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/fstream(358,33):remark #34051: REGISTER ALLOCATION : [__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED0Ev] /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/fstream:358

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    5[ rax rdx rbx rdi r15]
        
    Routine temporaries
        Total         :      28
            Global    :      13
            Local     :      15
        Regenerable   :       1
        Spilled       :       2
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       1 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__1::basic_filebuf<char, std::__1::char_traits<char>>::underflow(std::__1::basic_filebuf<char, std::__1::char_traits<char>> *)

    Report from: Code generation optimizations [cg]

/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/fstream(594,9):remark #34008: call to _memmove not inlined based on compiler heuristics
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/fstream(611,17):remark #34008: call to _memmove not inlined based on compiler heuristics
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/fstream(617,26):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/fstream(583,1):remark #34051: REGISTER ALLOCATION : [__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE9underflowEv] /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/fstream:583

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbp rsi rdi r8-r13]
        
    Routine temporaries
        Total         :     112
            Global    :      32
            Local     :      80
        Regenerable   :      15
        Spilled       :       3
        
    Routine stack
        Variables     :      41 bytes*
            Reads     :       1 [4.51e-02 ~ 0.1%]
            Writes    :       4 [3.33e-01 ~ 0.8%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__1::basic_filebuf<char, std::__1::char_traits<char>>::overflow(std::__1::basic_filebuf<char, std::__1::char_traits<char>> *, std::__1::basic_filebuf<char, std::__1::char_traits<char>>::int_type)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]



Non-optimizable loops:


LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/fstream(729,29)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/fstream(674,1):remark #34051: REGISTER ALLOCATION : [__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE8overflowEi] /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/fstream:674

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :      86
            Global    :      32
            Local     :      54
        Regenerable   :      18
        Spilled       :       7
        
    Routine stack
        Variables     :      17 bytes*
            Reads     :       3 [6.92e-01 ~ 1.4%]
            Writes    :       1 [4.22e-01 ~ 0.8%]
        Spills        :      16 bytes*
            Reads     :       8 [6.38e-01 ~ 1.2%]
            Writes    :       2 [8.45e-01 ~ 1.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__1::basic_filebuf<char, std::__1::char_traits<char>>::setbuf(std::__1::basic_filebuf<char, std::__1::char_traits<char>> *, std::__1::basic_filebuf<char, std::__1::char_traits<char>>::char_type *, std::__1::streamsize)

    Report from: Code generation optimizations [cg]

/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/fstream(739,1):remark #34051: REGISTER ALLOCATION : [__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE6setbufEPcl] /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/fstream:739

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbx rbp rsi rdi r12]
        
    Routine temporaries
        Total         :      31
            Global    :      18
            Local     :      13
        Regenerable   :       3
        Spilled       :       3
        
    Routine stack
        Variables     :      16 bytes*
            Reads     :       2 [1.22e+00 ~ 2.2%]
            Writes    :       2 [1.22e+00 ~ 2.2%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__1::basic_filebuf<char, std::__1::char_traits<char>>::seekoff(std::__1::basic_filebuf<char, std::__1::char_traits<char>> *, std::__1::basic_filebuf<char, std::__1::char_traits<char>>::off_type, std::__1::ios_base::seekdir, std::__1::ios_base::openmode)

    Report from: Code generation optimizations [cg]

/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/string(506,92):remark #34000: call to _memset implemented inline with stores with proven (alignment, offset): (16, 0)
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/fstream(814,16):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/string(506,92):remark #34000: call to _memset implemented inline with stores with proven (alignment, offset): (16, 0)
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/fstream(822,16):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/string(506,92):remark #34000: call to _memset implemented inline with stores with proven (alignment, offset): (16, 0)
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/string(511,65):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/fstream(826,12):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/string(506,92):remark #34000: call to _memset implemented inline with stores with proven (alignment, offset): (16, 0)
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/fstream(799,16):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/fstream(793,1):remark #34051: REGISTER ALLOCATION : [__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj] /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/fstream:793

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rbp rsi rdi r8 r13-r15 zmm0]
        
    Routine temporaries
        Total         :      93
            Global    :      39
            Local     :      54
        Regenerable   :      15
        Spilled       :       5
        
    Routine stack
        Variables     :     544 bytes*
            Reads     :      17 [1.62e+01 ~ 12.7%]
            Writes    :      24 [1.36e+01 ~ 10.7%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__1::basic_filebuf<char, std::__1::char_traits<char>>::seekpos(std::__1::basic_filebuf<char, std::__1::char_traits<char>> *, std::__1::basic_filebuf<char, std::__1::char_traits<char>>::pos_type, std::__1::ios_base::openmode)

    Report from: Code generation optimizations [cg]

/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/string(506,92):remark #34000: call to _memset implemented inline with stores with proven (alignment, offset): (16, 0)
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/fstream(840,16):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/fstream(842,13):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/fstream(843,12):remark #34026: call to memcpy implemented as a call to optimized library version
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/string(506,92):remark #34000: call to _memset implemented inline with stores with proven (alignment, offset): (16, 0)
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/fstream(834,16):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/fstream(832,1):remark #34051: REGISTER ALLOCATION : [__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj] /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/fstream:832

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rsi rdi r8-r10 r12-r13 zmm0]
        
    Routine temporaries
        Total         :      52
            Global    :      22
            Local     :      30
        Regenerable   :      12
        Spilled       :       2
        
    Routine stack
        Variables     :     272 bytes*
            Reads     :       8 [1.12e+01 ~ 13.0%]
            Writes    :      10 [6.27e+00 ~ 7.3%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__1::basic_filebuf<char, std::__1::char_traits<char>>::sync(std::__1::basic_filebuf<char, std::__1::char_traits<char>> *)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]



Non-optimizable loops:


LOOP BEGIN at /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/fstream(868,25)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/fstream(877,30):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/fstream(907,21):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/fstream(849,1):remark #34051: REGISTER ALLOCATION : [__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE4syncEv] /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/fstream:849

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rsi rdi r8-r9 r12 r14-r15]
        
    Routine temporaries
        Total         :     111
            Global    :      37
            Local     :      74
        Regenerable   :      19
        Spilled       :       4
        
    Routine stack
        Variables     :     136 bytes*
            Reads     :       5 [7.28e-01 ~ 0.9%]
            Writes    :       4 [1.03e+01 ~ 13.0%]
        Spills        :       8 bytes*
            Reads     :       2 [3.83e-02 ~ 0.0%]
            Writes    :       1 [3.83e-02 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__1::basic_filebuf<char, std::__1::char_traits<char>>::imbue(std::__1::basic_filebuf<char, std::__1::char_traits<char>> *, const std::__1::locale &)

    Report from: Code generation optimizations [cg]

/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/fstream(918,1):remark #34051: REGISTER ALLOCATION : [__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE] /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/fstream:918

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rax rdx rcx rbx rbp rsi rdi]
        
    Routine temporaries
        Total         :      39
            Global    :      21
            Local     :      18
        Regenerable   :       1
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: _ZNSt3__114basic_ifstreamIcNS_11char_traitsIcEEED0Ev(std::__1::basic_ifstream<char, std::__1::char_traits<char>> *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (_ZNSt3__114basic_ifstreamIcNS_11char_traitsIcEEED0Ev(std::__1::basic_ifstream<char, std::__1::char_traits<char>> *)) [215] <compiler generated>


    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [__ZTv0_n24_NSt3__114basic_ifstreamIcNS_11char_traitsIcEEED0Ev] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rax rdx rcx rsi rdi r8-r9]
        
    Routine temporaries
        Total         :      27
            Global    :       0
            Local     :      27
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__1::basic_ifstream<char, std::__1::char_traits<char>>::~basic_ifstream(std::__1::basic_ifstream<char, std::__1::char_traits<char>> *const)

    Report from: Code generation optimizations [cg]

/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/iosfwd(131,32):remark #34051: REGISTER ALLOCATION : [__ZNSt3__114basic_ifstreamIcNS_11char_traitsIcEEED0Ev] /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/iosfwd:131

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rax rdx rbx rbp rsi rdi r15]
        
    Routine temporaries
        Total         :      51
            Global    :      14
            Local     :      37
        Regenerable   :       3
        Spilled       :       3
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       3 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: _ZNSt3__114basic_ifstreamIcNS_11char_traitsIcEEED1Ev(std::__1::basic_ifstream<char, std::__1::char_traits<char>> *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (_ZNSt3__114basic_ifstreamIcNS_11char_traitsIcEEED1Ev(std::__1::basic_ifstream<char, std::__1::char_traits<char>> *)) [217] <compiler generated>


    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [__ZTv0_n24_NSt3__114basic_ifstreamIcNS_11char_traitsIcEEED1Ev] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rax rdx rcx rsi rdi r8-r9]
        
    Routine temporaries
        Total         :      27
            Global    :       0
            Local     :      27
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__1::basic_filebuf<char, std::__1::char_traits<char>>::pbackfail(std::__1::basic_filebuf<char, std::__1::char_traits<char>> *, std::__1::basic_filebuf<char, std::__1::char_traits<char>>::int_type)

    Report from: Code generation optimizations [cg]

/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/fstream(652,1):remark #34051: REGISTER ALLOCATION : [__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE9pbackfailEi] /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/fstream:652

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rdx rsi rdi]
        
    Routine temporaries
        Total         :      17
            Global    :       9
            Local     :       8
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
